import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: "java"
apply plugin: "idea"
apply plugin: "maven"
apply plugin: "signing"
apply from: "https://launchpad.net/gradle-release/trunk/latest/+download/apply.groovy"

def sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
def sonatypeUsername = hasProperty("sonatypeUsername") ? sonatypeUsername : ""
def sonatypePassword = hasProperty("sonatypePassword") ? sonatypePassword : ""
def isReleaseVersion = hasProperty("version") && !version.endsWith("SNAPSHOT")

repositories {
  mavenCentral()
}

dependencies {
  compile "commons-beanutils:commons-beanutils:1.8.3"
  compile "commons-collections:commons-collections:3.2.1"
  compile "commons-lang:commons-lang:2.6"
  compile "org.hamcrest:hamcrest-core:1.2.1"
  compile "org.hamcrest:hamcrest-library:1.2.1"
  compile "com.google.guava:guava:11.0.2"

  testCompile "org.javafunk.matchbox:matchbox:0.1.2"
  testCompile "org.mockito:mockito-core:1.9.0"
  testCompile "junit:junit-dep:4.10"
}

compileJava {
  options.fork = true
  options.forkOptions.memoryMaximumSize = "1024M"
}

compileTestJava {
  options.fork = true
  options.forkOptions.memoryMaximumSize = "1024M"
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.2'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

createReleaseTag.dependsOn uploadArchives

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: sonatypeRepositoryUrl) {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'Funk'
        description 'Functional utilities for Java'
        groupId 'org.javafunk.funk'
        artifactId 'funk'
        packaging 'jar'
        url 'http://www.javafunk.org'

        scm {
          url 'scm:git:https://github.com/javafunk/funk.git'
          connection 'scm:git:https://github.com/javafunk/funk.git'
          developerConnection 'http://github.com/javafunk/funk'
        }

        licenses {
          license {
            name 'BSD License'
            url 'http://www.opensource.org/licenses/bsd-license.php'
          }
        }

        developers {
          developer {
            id 'toby'
            name 'Toby Clemson'
            email 'tobyclemson@gmail.com'
          }
          developer {
            id 'andrew'
            name 'Andrew Kiellor'
            email 'akiellor@gmail.com'
          }
          developer {
            id 'simon'
            name 'Simon Brunning'
            email 'simon@brunningonline.net'
          }
        }
      }
    }
  }
}
